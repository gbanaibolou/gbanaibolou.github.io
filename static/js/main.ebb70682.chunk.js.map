{"version":3,"sources":["Card.js","CardList.js","SearchBox.js","Scroll.js","robots.js","App.js","serviceWorker.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","username","App","onSearchChange","event","setState","target","value","state","this","filteredRobots","filter","robot","toLowerCase","includes","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ebb70682.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id}) => {\r\n\treturn (\r\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img alt='' src={`https://robohash.org/${id}?200x200`} />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\trobots.map((user, i) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Card \r\n\t\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\t\tid={robots[i].id} \r\n\t\t\t\t\t\t\tname={robots[i].name} \r\n\t\t\t\t\t\t\temail={robots[i].email}\t\t\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\t\t\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t\t<input \r\n\t\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\r\n\t\t\t\ttype='search' \r\n\t\t\t\tplaceholder='search friends'\r\n\t\t\t\tonChange={searchChange} \r\n\t\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style={{ overflowY: 'scroll', border:'2px solid black', height: '800px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Scroll;","export const robots = [\r\n\t{\r\n\t\tid: 1,\r\n\t\tname: 'Eyinna Abazie',\r\n\t\tusername: 'Maverick',\r\n\t\temail: 'maverick@mavtech.com'\r\n\t},\r\n\t{\r\n\t\tid: 2,\r\n\t\tname: 'Chinyere Abazie',\r\n\t\tusername: 'Chichi',\r\n\t\temail: 'chichi@mavtech.com'\r\n\t},\r\n\t{\r\n\t\tid: 3,\r\n\t\tname: 'Hanna Makinen',\r\n\t\tusername: 'Karoliina',\r\n\t\temail: 'karoliina@yahoo.com'\r\n\t},\r\n\t{\r\n\t\tid: 4,\r\n\t\tname: 'David Oche',\r\n\t\tusername: 'David',\r\n\t\temail: 'davidoche@gmail.com'\r\n\t},\r\n\t{\r\n\t\tid: 5,\r\n\t\tname: 'Chyoma Anyaegbu',\r\n\t\tusername: 'Chyoma',\r\n\t\temail: 'chyoma@aol.com'\r\n\t},\r\n\t{\r\n\t\tid: 6,\r\n\t\tname: 'Tomiisin Salami',\r\n\t\tusername: 'Salami',\r\n\t\temail: 'tomiisin@aol.com'\r\n\t},\r\n\t{\r\n\t\tid: 7,\r\n\t\tname: 'Paul Dauda',\r\n\t\tusername: 'Paul',\r\n\t\temail: 'pauldauda@outlook.com'\r\n\t},\r\n\t{\r\n\t\tid: 8,\r\n\t\tname: 'Olaere Akosubo',\r\n\t\tusername: 'Olaere',\r\n\t\temail: 'olaereakosubo@icloud.com'\r\n\t},\r\n\t{\r\n\t\tid: 9,\r\n\t\tname: 'Daniel Olushola',\r\n\t\tusername: 'Daniel',\r\n\t\temail: 'danielolushola@icloud.com'\r\n\t},\r\n\t{\r\n\t\tid: 10,\r\n\t\tname: 'Yannick Calvin',\r\n\t\tusername: 'Yannick',\r\n\t\temail: 'yannickcalvin@icloud.com'\r\n\t},\r\n\t{\r\n\t\tid: 11,\r\n\t\tname: 'Oisereime Lloyd',\r\n\t\tusername: 'Oisereime',\r\n\t\temail: 'oisereimelloyd@icloud.com'\r\n\t},\r\n\t{\r\n\t\tid: 12,\r\n\t\tname: 'Ene Ameh',\r\n\t\tusername: 'Ene',\r\n\t\temail: 'eneameh@icloud.com'\r\n\t},\r\n\t{\r\n\t\tid: 13,\r\n\t\tname: 'Adaeze Sherleen',\r\n\t\tusername: 'Adaeze',\r\n\t\temail: 'ada@icloud.com'\r\n\t},\r\n\t{\r\n\t\tid: 14,\r\n\t\tname: 'Samuel Alfa-Odesola',\r\n\t\tusername: 'Samuel',\r\n\t\temail: 'sammyodesola@icloud.com'\r\n\t},\r\n\t{\r\n\t\tid: 15,\r\n\t\tname: 'Emmanuel Orofa',\r\n\t\tusername: 'Emmanuel',\r\n\t\temail: 'emmaorofa@icloud.com'\r\n\t},\r\n\t{\r\n\t\tid: 16,\r\n\t\tname: 'Kale Nuka',\r\n\t\tusername: 'Kale',\r\n\t\temail: 'kalenuka@yahoo.com'\r\n\t},\r\n\t{\r\n\t\tid: 17,\r\n\t\tname: 'Akudo Ijezie',\r\n\t\tusername: 'Akudo',\r\n\t\temail: 'akudoijezie@icloud.com'\r\n\t},\r\n\t{\r\n\t\tid: 18,\r\n\t\tname: 'Marv Malumi',\r\n\t\tusername: 'Malumi',\r\n\t\temail: 'marvmalumi@gmail.com'\r\n\t},\r\n\t{\r\n\t\tid: 19,\r\n\t\tname: 'Bryan Moses',\r\n\t\tusername: 'Bryan',\r\n\t\temail: 'bryanmoses@icloud.com'\r\n\t},\r\n\t{\r\n\t\tid: 20,\r\n\t\tname: 'Judah Robert',\r\n\t\tusername: 'Judah',\r\n\t\temail: 'judahrobert@icloud.com'\r\n\t},\r\n\t{\r\n\t\tid: 21,\r\n\t\tname: 'Ajoke Emekene',\r\n\t\tusername: 'Ajoke',\r\n\t\temail: 'ajokeemekene@icloud.com'\r\n\t},\r\n\t{\r\n\t\tid: 22,\r\n\t\tname: 'Gabriel Yamur',\r\n\t\tusername: 'Gabriel',\r\n\t\temail: 'gabrielyamur@icloud.com'\r\n\t},\r\n\t{\r\n\t\tid: 23,\r\n\t\tname: 'Ece Ukan',\r\n\t\tusername: 'Ece',\r\n\t\temail: 'eceukan@yahoo.com'\r\n\t},\r\n\t{\r\n\t\tid: 24,\r\n\t\tname: 'Israel Abba',\r\n\t\tusername: 'Israel',\r\n\t\temail: 'isrealabba@icloud.com'\r\n\t},\r\n\t{\r\n\t\tid: 25,\r\n\t\tname: 'Uche Obiokoye',\r\n\t\tusername: 'Uche',\r\n\t\temail: 'ucheobiokoye@icloud.com'\r\n\t},\r\n\t{\r\n\t\tid: 26,\r\n\t\tname: 'Chimzi Lenora',\r\n\t\tusername: 'Lenora',\r\n\t\temail: 'lenora@icloud.com'\r\n\t},\r\n\t{\r\n\t\tid: 27,\r\n\t\tname: 'Kenechukwu Agwu',\r\n\t\tusername: 'Agwu',\r\n\t\temail: 'keneagwu@icloud.com'\r\n\t},\r\n\t{\r\n\t\tid: 28,\r\n\t\tname: 'Charles Bulus',\r\n\t\tusername: 'Bulus',\r\n\t\temail: 'charlesbulus@icloud.com'\r\n\t},\r\n\t{\r\n\t\tid: 29,\r\n\t\tname: 'Ifeanyi Euzebus',\r\n\t\tusername: 'Ifeanyi',\r\n\t\temail: 'ifeanyieuzebus@icloud.com'\r\n\t},\r\n\t{\r\n\t\tid: 30,\r\n\t\tname: 'Ibrahim Lawan',\r\n\t\tusername: 'Ibrahim',\r\n\t\temail: 'ibrahimlawan@icloud.com'\r\n\t},\r\n\r\n]","import React, { Component } from 'react';\r\nimport CardList from './CardList';\r\nimport SearchBox from './SearchBox';\r\nimport Scroll from './Scroll';\r\nimport { robots } from './robots';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.setState({ robots: robots })\r\n\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({ searchfield: event.target.value })\t\t\t\t\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { robots, searchfield } = this.state;\r\n\t\tconst filteredRobots = robots.filter(robot =>{\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n\t\t})\r\n\t\treturn (\r\n\t\t\t<div className='tc'>\r\n\t\t\t\t<h1 className='f1'>Bolous-Friends</h1>\r\n\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t<CardList robots={filteredRobots} />\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\t\t\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}